{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webAppName": {
      "type": "string",
      "defaultValue": "fgcWebApp",
      "metadata": {
        "description": "Web app name."
      },
      "minLength": 2
    },
    "location": {
      "type": "string",
      "defaultValue": "southcentralus",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The SKU of App Service Plan."
      }
    },
    "language": {
      "type": "string",
      "defaultValue": ".net",
      "allowedValues": [
        ".net",
        "php",
        "node",
        "html"
      ],
      "metadata": {
        "description": "The language stack of the app."
      }
    },
    "repoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/giuliano64/azAssesmentAppServiceFGC.git",
      "metadata": {
        "description": "Optional Git Repo URL, if empty a 'hello world' app will be deploy from the Azure-Samples repo"
      }
    },
    "minimumCapacity": {
      "type": "Int",
      "defaultValue": 2,
      "metadata": {
        "description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
      }
    },
    "maximumCapacity": {
      "type": "Int",
      "defaultValue": 4,
      "metadata": {
        "description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
      }
    },
    "defaultCapacity": {
      "type": "Int",
      "defaultValue": 2,
      "metadata": {
        "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
      }
    },
    "metricName": {
      "type": "string",
      "defaultValue": "CpuPercentage",
      "metadata": {
        "description": "The metric name."
      }
    },
    "metricThresholdToScaleOut": {
      "type": "Int",
      "defaultValue": 50,
      "metadata": {
        "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
      }
    },
    "metricThresholdToScaleIn": {
      "type": "Int",
      "defaultValue": 20,
      "metadata": {
        "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
      }
    },
    "changePercentScaleOut": {
      "type": "Int",
      "defaultValue": 20,
      "metadata": {
        "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
      }
    },
    "changePercentScaleIn": {
      "type": "Int",
      "defaultValue": 10,
      "metadata": {
        "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
      }
    },
    "autoscaleEnabled": {
      "type": "Bool",
      "metadata": {
        "description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
      }
    }

  },
  "variables": {
    "appServicePlanPortalName": "[concat('AppServicePlan-', parameters('webAppName'))]",
    "gitRepoReference": {
      ".net": "https://github.com/Azure-Samples/app-service-web-dotnet-get-started",
      "node": "https://github.com/Azure-Samples/nodejs-docs-hello-world",
      "php": "https://github.com/Azure-Samples/php-docs-hello-world",
      "html": "https://github.com/Azure-Samples/html-docs-hello-world"
    },
    "gitRepoUrl": "[if(empty(parameters('repoUrl')), variables('gitRepoReference')[parameters('language')], parameters('repoUrl'))]",
    "configReference": {
      ".net": {
        "comments": ".Net app. No additional configuration needed."
      },
      "html": {
        "comments": "HTML app. No additional configuration needed."
      },
      "php": {
        "phpVersion": "7.4"
      },
      "node": {
        "appSettings": [
          {
            "name": "WEBSITE_NODE_DEFAULT_VERSION",
            "value": "12.15.0"
          }
        ]
      }
    },

    "vnetName": "appVnet",
    "vnetPrefix": "11.0.0.0/16",
    "subnetName": "appsubnet1",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
    "subnetPrefix": "11.0.0.0/24",
    "settingName": "[concat(toLower(variables('appServicePlanPortalName')), '-setting')]",
    "targetResourceId": "[resourceId('Microsoft.Web/serverFarms/', variables('appServicePlanPortalName'))]"



  },
  "resources": [
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('appServicePlanPortalName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      }
    },
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      ],
      "properties": {
        "siteConfig": "[variables('configReference')[parameters('language')]]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      },
      {
        "type": "Microsoft.Insights/autoscalesettings",
        "name": "[variables('settingName')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
        ],
        "apiVersion": "2014-04-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "profiles": [
            {
              "name": "DefaultAutoscaleProfile",
              "capacity": {
                "minimum": "[parameters('minimumCapacity')]",
                "maximum": "[parameters('maximumCapacity')]",
                "default": "[parameters('defaultCapacity')]"
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "[parameters('metricName')]",
                    "metricNamespace": "",
                    "metricResourceUri": "[variables('targetResourceId')]",
                    "timeGrain": "PT5M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": "[parameters('metricThresholdToScaleOut')]"
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "PercentChangeCount",
                    "value": "[parameters('changePercentScaleOut')]",
                    "cooldown": "PT10M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "[parameters('metricName')]",
                    "metricNamespace": "",
                    "metricResourceUri": "[variables('targetResourceId')]",
                    "timeGrain": "PT5M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": "[parameters('metricThresholdToScaleIn')]"
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "PercentChangeCount",
                    "value": "[parameters('changePercentScaleIn')]",
                    "cooldown": "PT10M"
                  }
                }
              ]
            }
          ],
          "enabled": "[parameters('autoscaleEnabled')]",
          "targetResourceUri": "[variables('targetResourceId')]"
        }
      },
      "resources": [
        {
          "type": "sourcecontrols",
          "apiVersion": "2019-08-01",
          "name": "web",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
          ],
          "properties": {
            "repoUrl": "[variables('gitRepoUrl')]",
            "branch": "master",
            "isManualIntegration": true
          }
        }

      ]
    }
  ]
}
